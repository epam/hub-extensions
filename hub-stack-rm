#!/bin/sh -e
# Copyright (c) 2023 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://www.mozilla.org/en-US/MPL/2.0/.


HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
HUB_EXTENSION="$(basename "$0" | sed 's/hub-/hubctl-/g' | sed 's/-/ /g')"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH HUB_WORKDIR

usage() {
cat << EOF
Remove configuration from current stack

Usage:
  $HUB_EXTENSION [DOMAIN_NAME]

Parameters:
    -V  --verbose          Verbose outputs for debug purpose
    -h --help              Show this message

EOF
}

DOT_ENV="$HUB_WORKDIR/.env"
while [ "$1" != "" ]; do
    case $1 in
    -V | --verbose )    set -x
                        ;;
    -h | --help )       usage
                        exit
                        ;;
    initialized )       DOT_ENV="$HUB_WORKDIR/.hub/env/.env"
                        ;;
    * )                 DOT_ENV="$HUB_WORKDIR/.hub/env/$1.env"
                        ;;
    esac
    shift
done

beginswith() {
  case $2 in "$1"*) true;; *) false;; esac;
}

in_directory() {
  file="$(files abspath "$1")"
  if test -n "$2"; then
    dir="$(files abspath "$2")"
  else
    dir="$(files abspath "$HUB_WORKDIR/.hub")"
  fi
  beginswith "$dir" "$file"
}

rm_in_workdir() {
  if test -L "$1"; then
    rm_in_workdir "$(readlink -n "$1")"
    echo "* Unlinking: $f"
    unlink "$1"
  elif test -f "$1"; then
    if in_directory "$1"; then
      echo "* Removing: $1"
      rm -rf "$1"
    else
      color w "Skipping $1 (not in $HUB_WORKDIR/.hub directory)"
    fi
  fi
}

if test -L "$DOT_ENV" -a ! -e "$DOT_ENV"; then
  echo "* Unlinking: $HUB_WORKDIR/.env"
  unlink "$HUB_WORKDIR/.env"
  exit
fi

if test ! -f "$DOT_ENV"; then
  cat <<EOF | color w
Nothing to remove

EOF
  cat <<EOF | color g

To see list of available stacks run

  hubctl stack ls

EOF
  exit 1
fi
dotenv="dotenv -f $DOT_ENV"
HUB_DOMAIN_NAME="$($dotenv get "HUB_DOMAIN_NAME")"
if test -z "$HUB_DOMAIN_NAME"; then
  HUB_DOMAIN_NAME="$($dotenv get "HUB_STACK_NAME")"
  if test -L "$HUB_WORKDIR/.env"; then
    FILES="$FILES $(readlink -n "$HUB_WORKDIR/.env")"
  fi
fi

if test -n "$HUB_DOMAIN_NAME"; then
  echo "Removing configuration for: $HUB_DOMAIN_NAME"
  FILES="$FILES $(find "$HUB_WORKDIR/.hub" -name "$HUB_DOMAIN_NAME.*" -print0  | xargs -0)"
else
  echo "Removing configuration for: initialized"
fi

echo "Using work dir: $HUB_WORKDIR"
for key in $(dotenv keys); do
  if test "$key" = "HUB_WORKDIR" -o "$key" = "HUB_FILES"; then
    continue
  fi
  for v in $($dotenv get "$key" | sed 's/,/ /g'); do
    if test -f "$v"; then
      FILES="$FILES $v"
    fi
  done
done

for f in $FILES; do
  if ! test -f; then
    color w  "* Skipping $f (not found)"
    continue
  fi
  rm_in_workdir "$f"
done

if test -L "$HUB_WORKDIR/.env" -a ! -e "$HUB_WORKDIR/.env"; then
  echo "* Unlinking: .env"
  unlink "$HUB_WORKDIR/.env"
fi

color w "This operation does not undeploy associated to the stack resources"
cat << EOF | color g

Stack been removed

EOF
