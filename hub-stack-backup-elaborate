#!/bin/sh -e
# Copyright (c) 2023 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://www.mozilla.org/en-US/MPL/2.0/.


HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH

usage() {
cat << EOF

Elaborate (include) backup parameters with the stack parameters

Usage:
$ hubctl stack backup elaborate BACKUP_NAME/TAG

Parameters:
    -V  --verbose         Verbose outputs for debug purpose
    --tty                 Use TTY (terminal) mode for hubctl
    --no-tty              Do not use TTY (terminal) mode for hubctl
    --                    additional arguments for "hubctl backup unbundle" command
    -h  --help            Print this message

Additional arguments for: hubctl backup unbundle -h
---
EOF
  hubctl backup unbundle -h
}

if test ! -f "$HUB_WORKDIR/.env"; then
  color error "Error: cannot find .env file in $HUB_WORKDIR"
  exit 1
fi
eval "$(dotenv export -f "$HUB_WORKDIR/.env")"

while test "$1" != ""; do
    case $1 in
        # -c | --component )  shift
        #                     HUB_OPTS="$HUB_OPTS -c $1"
        #                     FULL_STACK=false
        #                     ;;
        # -t | --tag          )  shift
        #                     HUB_BACKUP_TAG="$1"
        #                     ;;
        --tty )             HUB_OPTS="$HUB_OPTS --tty true"
                            ;;
        --no-tty )          HUB_OPTS="$HUB_OPTS --tty false"
                            ;;
        -V | --verbose )    set -x
                            ;;
        -h | --help )       usage
                            exit 0
                            ;;
        -- )                shift
                            HUB_OPTS="$HUB_OPTS $*"
                            exit
                            ;;
        * )                 BACKUP_NAME="$1"
                            break
                            ;;
    esac
    shift
done

if test -z "$BACKUP_NAME"; then
  echo "Backup: name or tag has not been defined"
  usage
  exit 1
fi
if test -z "$HUB_DOMAIN_NAME"; then
  echo "Error: HUB_DOMAIN_NAME has not been defined"
  exit 2
fi

cat << EOF
Elaborate stack:
* Using domain name: $HUB_DOMAIN_NAME
EOF

if test -z "$HUB_BACKUP_DIR"; then
  HUB_BACKUP_DIR="$HUB_WORKDIR/.hub/backups"
fi

# maybe tag?
backup_path="$HUB_BACKUP_DIR/tags/$BACKUP_NAME"
if test -L "$backup_path"; then
  backup_path="$(readlink -n "$backup_path")"
fi
if test -d "$backup_path"; then
  # for better readability
  backup_path="$backup_path"
elif test  -L "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/$BACKUP_NAME"; then
  # maybe backup name?
  backup_path=$(readlink -n "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/$BACKUP_NAME")
elif test  -d "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/$BACKUP_NAME"; then
  backup_path="$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/$BACKUP_NAME"
else
  echo "* Error: backup $BACKUP_NAME has not been found"
  exit 4
fi

echo "* Using backup: $backup_path"

if test -f "$backup_path/hub-bundle.yaml.gz"; then
  HUB_OPTS="$backup_path/hub-bundle.yaml.gz $HUB_OPTS"
elif test -f "$backup_path/hub-bundle.yaml"; then
  HUB_OPTS="$backup_path/hub-bundle.yaml $HUB_OPTS"
else
  echo "Error: cannot find $backup_path/hub-bundle.yaml or $backup_path/hub-bundle.yaml.gz"
  exit 5
fi


cat <<EOF
* Running CLI command:

  hubctl backup unbundle $HUB_OPTS -o $backup_path/params.yaml.gz

EOF

# shellcheck disable=SC2086
hubctl backup unbundle $HUB_OPTS -o "$backup_path/params.yaml.gz"
gunzip -c "$backup_path/params.yaml.gz" > "$backup_path/params.yaml"

hubctl stack elaborate --hub-files "$HUB_FILES $backup_path/params.yaml"
echo "Updating $HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"
if test -L "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"; then
  unlink "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"
elif test -f "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"; then
  rm -rfv "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"
fi
ln -s "$backup_path" "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"
