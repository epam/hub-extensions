#!/bin/sh -e
# Copyright (c) 2023 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://www.mozilla.org/en-US/MPL/2.0/.

HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH

if test ! -f "$HUB_WORKDIR/.env"; then
  color error "Error: cannot find .env file in $HUB_WORKDIR"
  exit 1
fi
eval "$(dotenv export -f "$HUB_WORKDIR/.env")"

if test -z "$HUB_BACKUP_DIR"; then
  HUB_BACKUP_DIR="$HUB_WORKDIR/.hub/backups"
fi

find_tags() {
  _find_tags_param="$(files abspath "$1")"
  for f in "$HUB_BACKUP_DIR"/tags/*; do
    if ! test -L "$f"; then continue; fi
    if test "$(files abspath "$(readlink -n "$f")")" = "$_find_tags_param"; then
      printf " %s" "$(basename "$f")"
    fi
  done
}

if test -L "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate"; then
  elaborated="$(files abspath "$(readlink -n "$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME/.elaborate")")"
fi

working_dir="$HUB_BACKUP_DIR/$HUB_DOMAIN_NAME"
if test -d "$working_dir"; then
  cat << EOF

Listing backups for $HUB_DOMAIN_NAME:
EOF
  for d in "$working_dir"/*; do
    if test ! -d "$d"; then continue; fi
    tags="$(find_tags "$d")"
    if test -n "$elaborated" -a "$elaborated" = "$(files abspath "$d")"; then
      star="*"
    else
      star=" "
    fi
    if test -z "$tags"; then
      echo "$star $(basename "$d")    local"
    else
      echo "$star $(basename "$d")    local    $(echo "$tags" | xargs)"
    fi
  done
else
  echo "There are no backups for stack $HUB_DOMAIN_NAME"
  exit 2
fi
