#!/bin/bash -e
# Copyright (c) 2023 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC2046,SC2086

while [ "$1" != "" ]; do
  case $1 in
    --domain-name )       shift
                          HUB_DOMAIN_NAME="$1"
                          ;;
    --bubbles-secret-key ) shift
                          HUB_DOMAIN_SECRET="$1"
                          ;;
    -ns | --nameserver )  shift
                          NAMESERVERS="$NAMESERVERS $1"
                          ;;
  esac
  shift
done

VERBOSE=${VERBOSE:-"false"}
if test $VERBOSE = "true"; then
  set -x
fi

if test -n "$(echo $NAMESERVERS | xargs)"; then
  NAMESERVERS=$(echo "\"$NAMESERVERS\"" | jq -cM '[split(" ") []| select(length > 0)]')
else
  cloud=${HUB_CLOUD_PROVIDER:-aws}
  case $cloud in
    aws )
      impl=aws/route53
      ;;
    azure )
      impl=azure/dns
      ;;
    gcp )
      impl=gcp/clouddns
      ;;
    * )
      echo "Unsupported cloud provider: $cloud"
      exit 2
  esac
  NAMESERVERS=$($(dirname "$0")/../$impl/nameservers --domain-name "$HUB_DOMAIN_NAME" --json)
fi

if test "$NAMESERVERS" = "[]"; then
  echo "Error: cannot find nameservers for $HUB_DOMAIN_NAME"
  exit 1
fi

if test -z "$HUB_DOMAIN_SECRET"; then
  echo "Error: HUB_DOMAIN_SECRET cannot be empty"
  exit 1
fi

TEMP=$(mktemp /tmp/superhub.XXXXXX) || exit 1
# shellcheck disable=SC2064
trap "rm -f $TEMP" EXIT

HUB_BUBBLE_DNS_URL=${HUB_BUBBLE_DNS_URL:-"https://dns.bubbles.devops.delivery"}

set +e
HTTP_CODE=$(curl -sLo $TEMP -w "%{http_code}" -X PUT \
      "$HUB_BUBBLE_DNS_URL/$HUB_DOMAIN_NAME" \
      -H 'Content-Type: application/json;charset=UTF-8' \
      -d "{\"key\": \"$HUB_DOMAIN_SECRET\",\"nameservers\": $(echo $NAMESERVERS | jq -cM '.')}")
set -e
# Checking for return code 2??
if test "$(echo $HTTP_CODE | cut -c1-1)" != "2"; then
  cat << EOF
Error

Please try again later!

Troubleshooting info:
* Web services returned error code: $HTTP_CODE
EOF
  echo -n "* Server response: "
  if test -s "$TEMP"; then
    cat $TEMP
  else
    echo "not available"
  fi
  exit 1
fi
echo "Done"
