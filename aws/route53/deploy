#!/bin/bash -e
# Copyright (c) 2022 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC2086

usage() {
  cat << EOF
Creates a hosted zone by domain name and returns delegation set NS records

Usage: $(basename "$0") --domain-name

Parameters:
    --domain-name         Domain name of the hosted zone
    --aws-region          AWS Region
    --aws-profile         AWS Profile
EOF
}

while [ "$1" != "" ]; do
    case $1 in
        --aws-region )    shift
                          export AWS_REGION="$1"
                          ;;
        --aws-profile )   shift
                          export AWS_PROFILE="$1"
                          ;;
        --domain-name )   shift
                          HUB_DOMAIN_NAME="$1"
                          ;;
        --json )          NS_OUTPUT="json"
                          ;;
        -h | --help )     usage
                          exit
                          ;;
    esac
    shift
done

if test -z "$HUB_DOMAIN_NAME"; then
  usage
  exit 1
fi

export AWS_DEFAULT_OUTPUT=text

hosted_zone_ns() {
  aws $AWS_OPTS \
    route53 \
    get-hosted-zone \
    --id="$ZONE_ID" \
    --output="${NS_OUTPUT:-text}" \
    --query 'DelegationSet.NameServers'
}

tag_hosted_zone() {
  aws $AWS_OPTS route53 change-tags-for-resource \
    --resource-type "hostedzone" \
    --resource-id "$1" \
    --add-tags "Key=superhub.io/stack/$HUB_DOMAIN_NAME,Value=owned"
}

ZONE_ID=$($(dirname "$0")/zone-id --domain-name "$HUB_DOMAIN_NAME")
if test -n "$ZONE_ID"; then
  tag_hosted_zone "$ZONE_ID"
  hosted_zone_ns "$ZONE_ID"
  exit
fi

CALLER="epam-$(uuidgen | tr '[:upper:]' '[:lower:]' | tr -d - | cut -c-7)"
CHANGE=$(aws $AWS_OPTS route53 create-hosted-zone \
  --name="$HUB_DOMAIN_NAME" \
  --caller-reference="$CALLER" \
  --query 'ChangeInfo.Id' )

sleep 3

aws $AWS_OPTS route53 wait resource-record-sets-changed --id "$CHANGE"
ZONE_ID=$($(dirname "$0")/zone-id --domain-name "$HUB_DOMAIN_NAME")
if test -z "$ZONE_ID"; then
  echo "Error during hosted zone $HUB_DOMAIN_NAME creation"
  exit 2
fi

for record_type in "NS" "SOA"
do
  RECORD=$(aws route53 list-resource-record-sets --hosted-zone-id $ZONE_ID  \
    --output json \
    --query "ResourceRecordSets[?Type == '$record_type' ]" | jq -Mc ". |  .[].TTL = 60 | .[] | {\"Changes\":[{\"Action\": \"UPSERT\",\"ResourceRecordSet\": .} ]}")

  CHANGE=$(aws route53 change-resource-record-sets --output json --hosted-zone-id $ZONE_ID --change-batch "${RECORD}" \
    | jq  -Mr '.ChangeInfo.Id')
  aws $AWS_OPTS route53 wait resource-record-sets-changed --id "$CHANGE"
done

tag_hosted_zone "$ZONE_ID"
echo "$ZONE_ID created"
