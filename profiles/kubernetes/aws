#!/bin/bash -e
# Copyright (c) 2022 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC2086
kubectl="kubectl"
while (( "$#" )); do
  case $1 in
    --namespace )
      shift
      kubectl="$kubectl -n $1"
    ;;
    --pod )
      shift
      POD="$1"
    ;;
  esac
  shift
done

if test -z "$POD"; then
  echo "Error: missing value for argument: --pod"
  exit 1
fi

if test ! -f "$HUB_WORKDIR/.env"; then
  color error "Error: cannot find .env file in $HUB_WORKDIR"
  exit 1
fi
eval "$(dotenv export -f "$HUB_WORKDIR/.env")"

# these AWS_* vars are passed into pod by ./template as we may copy files to the non-default locations
# or switch to the default locations instead
aws_creds=${AWS_SHARED_CREDENTIALS_FILE:-$HOME/.aws/credentials}
aws_config=${AWS_CONFIG_FILE:-$HOME/.aws/config}
aws_profile=$AWS_PROFILE

if test -n "$aws_profile"; then
  AWS_ARGS="$AWS_ARGS --profile $aws_profile"
else
  # do not add aws cli arg
  aws_profile="default"
fi

render_conf_line() {
  local config_var=$1
  local shell_var
  local val

  shell_var=$(echo $config_var | tr a-z A-Z)
  if echo $shell_var | grep ^AWS_ >/dev/null; then
    val=${!shell_var}
    if test -n "$val"; then
      echo "$config_var = $val"
      return
    fi
  fi

  if val=$(aws $AWS_ARGS configure get $config_var); then
    if test -n "$val"; then
      echo "$config_var = $val"
    fi
  fi
}

temp_dir=$(mktemp -d)
mkdir -p "$temp_dir"
trap 'rm -rf $temp_dir' EXIT

credential_process=$(aws $AWS_ARGS configure get credential_process)
if test -n "$credential_process"; then
  json_credentials=$($credential_process)
  {
    echo "[$aws_profile]"
    echo "aws_access_key_id = $(jq -r .AccessKeyId <<<$json_credentials)"
    echo "aws_secret_access_key = $(jq -r .SecretAccessKey <<<$json_credentials)"
    echo "aws_session_token = $(jq -r .SessionToken <<<$json_credentials)"
  } > "$temp_dir/$(basename $aws_creds)"
else
  {
    echo "[$aws_profile]"
    render_conf_line "aws_access_key_id"
    render_conf_line "aws_secret_access_key"
    render_conf_line "aws_session_token"
  } > "$temp_dir/$(basename $aws_creds)"
fi

$kubectl exec "$POD" -- mkdir -p "$(dirname "$aws_creds")"
$kubectl cp "$temp_dir/$(basename $aws_creds)" "$POD:$(dirname "$aws_creds")"

{
  echo "[profile $aws_profile]"
  render_conf_line "region"
} > "$temp_dir/$(basename $aws_config)"
$kubectl exec "$POD" -- mkdir -p "$(dirname "$aws_config")"
$kubectl cp "$temp_dir/$(basename $aws_config)" "$POD:$(dirname "$aws_config")"
