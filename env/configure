#!/bin/bash -e
# Copyright (c) 2022 EPAM Systems, Inc.
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC2046,SC2086,SC2034

usage() {
  cat << EOF
Environment variables parameters:
  -f --file               Path to hub.yaml or parameter files (can repeat multiple times; default: hub.yaml params.yaml)
  --defaults              Do not ask for usecr input and accept default values instead
EOF
}

ident() {
  sed 's/^/  /'
}

if test -n "$(which tty)" && tty -s || echo "$-" | grep 'i'; then
  INTERACTIVE=true
else
  INTERACTIVE=false
fi

while [ "$1" != "" ]; do
  case $1 in
    --defaults )
      INTERACTIVE=false
      ;;
    --output )
      shift
      DOT_ENV="$1"
      ;;
    -f | --file )
      shift
      HUB_FILES="$(echo "$HUB_FILES $1" | xargs)"
      ;;
    -h | --help )
      usage
      exit
      ;;
  esac
  shift
done

if test -z "$HUB_WORKDIR"; then
  FIRST_FILE="$(echo "$HUB_FILES" | awk '{print $1;}')"
  if test -f $FIRST_FILE; then
    HUB_WORKDIR="$(dirname "$FIRST_FILE")"
  else
    HUB_WORKDIR="$(pwd)"
  fi
  export HUB_WORKDIR
fi

if test $VERBOSE = "true"; then
  set -x
fi

echo "Configuring environment variables"

if test -z "$HUB_FILES"; then
  color e "Error: cannot find stack definition files"
  exit 1
fi

for e in $(params listenv); do
  pname="$(params "$e" envvar | jq -cMr '.name? | select(.)')"
  pcomponent="$(params "$e" envvar | jq -cMr '.component? | select(.)')"
  ask env "$e" -m "parameter $pname $pcomponent" +empty -d "$DOT_ENV" -d "$(files abspath ".env")" -ask-env
done
