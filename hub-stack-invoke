#!/bin/bash -e
# Copyright (c) 2022 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
HUB_EXTENSION="$(basename "$0" | sed 's/-/ /g')"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH

hubctl="$(which hubctl 2>/dev/null || true)"
if test -z "$hubctl"; then
  # backward compatibility
  color warn "CLI name 'hub' is deprecated. It will be renamed to 'hubctl' in future releases"
  hubctl="$(which hub 2>/dev/null || true)"
fi
if test -z "$hubctl"; then
  color error "hubctl not found in PATH. Please install hubctl first."
  exit 1
fi

usage() {
cat << EOF

Invoke stack component's verb

Usage:
$ hubctl stack invoke <component> <verb>

Parameters:
    -V  --verbose          Verbose outputs for debug purpose
    -h --help              Show this message

EOF
}

component="$1"
verb="$2"

HUB_OPTS=
while [ "$1" != "" ]; do
    case $1 in
    -V | --verbose )    set -x
                        ;;
    -h | --help )       usage
                        exit
                        ;;
    * )                 HUB_OPTS="$HUB_OPTS $1"
    esac
    shift
done

if test ! -f .env; then
    echo "* Error: configuration '.env' not found"
    exit 1
fi
eval "$(dotenv export -f "$HUB_WORKDIR/.env" )"

cat << EOF
Invoking $verb:
* Using stack: $HUB_DOMAIN_NAME
* Using component: $component
EOF

if test -n "$HUB_KUBECONFIG" -a -f "$HUB_KUBECONFIG"; then
  KUBECONFIG="$HUB_KUBECONFIG"
  export KUBECONFIG
  echo "* Using kubeconfig: $KUBECONFIG"
elif test -n "$KUBECONFIG" -a -f "$KUBECONFIG"; then
  export KUBECONFIG
  echo "* Using kubeconfig: $KUBECONFIG"
fi

# shellcheck disable=SC2086
$hubctl invoke -m "$HUB_ELABORATE" -s "$HUB_STATE" $HUB_OPTS
