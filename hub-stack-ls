#!/bin/bash -e
# Copyright (c) 2022 EPAM Systems, Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

HUB_HOME="${HUB_HOME:-$(dirname "$0")}"
HUB_WORKDIR="${HUB_WORKDIR:-$(pwd)}"
PATH="$HUB_HOME:$HUB_HOME/bin:$HUB_WORKDIR:$HUB_WORKDIR/bin:$PATH"
export PATH HUB_HOME HUB_EXTENSION

hubctl="$(which hubctl 2>/dev/null || true)"
if test -z "$hubctl"; then
  # backward compatibility
  hubctl="$(which hub 2>/dev/null || true)"
fi
if test -z "$hubctl"; then
  color error "hubctl not found in PATH. Please install hubctl first."
  exit 1
fi

CURRENT=""
if test -f ".env"; then
  CURRENT=$(basename "$(readlink .env)" .env)
fi

if test ! -d .hub/env; then
  color e  "No stacks available"
  exit 1
fi

print_stacks() {
  local name star resp hubstate ts status
  echo "ACTIVE|STACK|STATUS|TIMESTAMP"
  if test -d ".hub/env"; then
    set +e
    # shellcheck disable=SC2045
    for f in $(ls -t .hub/env/*.env .hub/env/.env 2>/dev/null); do
      if test ! -f "$f"; then
        continue
      fi
      star=" "
      name="$(basename "$f" .env)"
      ts=""
      status=""
      resp=""
      hubstate=""
      if test "$CURRENT" = "$name"; then
        star="*"
      fi
      if test "$(basename "$f")" = ".env"; then
        name="initialized"
      fi
      hubstate="$(dotenv -f "$f" get HUB_STATE)"
      if test -n "$hubstate"; then
        resp="$($hubctl explain "$hubstate" --json | jq -cMr '{timestamp: .timestamp|split(".")|first, status: .status}')"
        status=$(echo "$resp" | jq -cMr '.status')
        ts=$(echo "$resp" | jq -cMr '.timestamp')
      fi
      echo "$star|$name|$status|$ts"
    done
    set -e
  fi
}

print_stacks | column -t -s"|"
